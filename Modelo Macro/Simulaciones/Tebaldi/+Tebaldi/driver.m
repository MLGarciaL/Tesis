%
% Status : main Dynare file
%
% Warning : this file is generated automatically by Dynare
%           from model file (.mod)

clearvars -global
clear_persistent_variables(fileparts(which('dynare')), false)
tic0 = tic;
% Define global variables.
global M_ options_ oo_ estim_params_ bayestopt_ dataset_ dataset_info estimation_info
options_ = [];
M_.fname = 'Tebaldi';
M_.dynare_version = '6.1';
oo_.dynare_version = '6.1';
options_.dynare_version = '6.1';
%
% Some global variables initialization
%
global_initialization;
M_.exo_names = cell(1,1);
M_.exo_names_tex = cell(1,1);
M_.exo_names_long = cell(1,1);
M_.exo_names(1) = {'e'};
M_.exo_names_tex(1) = {'e'};
M_.exo_names_long(1) = {'e'};
M_.endo_names = cell(14,1);
M_.endo_names_tex = cell(14,1);
M_.endo_names_long = cell(14,1);
M_.endo_names(1) = {'Y'};
M_.endo_names_tex(1) = {'Y'};
M_.endo_names_long(1) = {'Y'};
M_.endo_names(2) = {'C'};
M_.endo_names_tex(2) = {'C'};
M_.endo_names_long(2) = {'C'};
M_.endo_names(3) = {'X'};
M_.endo_names_tex(3) = {'X'};
M_.endo_names_long(3) = {'X'};
M_.endo_names(4) = {'K'};
M_.endo_names_tex(4) = {'K'};
M_.endo_names_long(4) = {'K'};
M_.endo_names(5) = {'L'};
M_.endo_names_tex(5) = {'L'};
M_.endo_names_long(5) = {'L'};
M_.endo_names(6) = {'A'};
M_.endo_names_tex(6) = {'A'};
M_.endo_names_long(6) = {'A'};
M_.endo_names(7) = {'R'};
M_.endo_names_tex(7) = {'R'};
M_.endo_names_long(7) = {'R'};
M_.endo_names(8) = {'W'};
M_.endo_names_tex(8) = {'W'};
M_.endo_names_long(8) = {'W'};
M_.endo_names(9) = {'I'};
M_.endo_names_tex(9) = {'I'};
M_.endo_names_long(9) = {'I'};
M_.endo_names(10) = {'LY'};
M_.endo_names_tex(10) = {'LY'};
M_.endo_names_long(10) = {'LY'};
M_.endo_names(11) = {'LA'};
M_.endo_names_tex(11) = {'LA'};
M_.endo_names_long(11) = {'LA'};
M_.endo_names(12) = {'PA'};
M_.endo_names_tex(12) = {'PA'};
M_.endo_names_long(12) = {'PA'};
M_.endo_names(13) = {'Pi'};
M_.endo_names_tex(13) = {'Pi'};
M_.endo_names_long(13) = {'Pi'};
M_.endo_names(14) = {'z'};
M_.endo_names_tex(14) = {'z'};
M_.endo_names_long(14) = {'z'};
M_.endo_partitions = struct();
M_.param_names = cell(11,1);
M_.param_names_tex = cell(11,1);
M_.param_names_long = cell(11,1);
M_.param_names(1) = {'alpha'};
M_.param_names_tex(1) = {'alpha'};
M_.param_names_long(1) = {'alpha'};
M_.param_names(2) = {'beta'};
M_.param_names_tex(2) = {'beta'};
M_.param_names_long(2) = {'beta'};
M_.param_names(3) = {'delta'};
M_.param_names_tex(3) = {'delta'};
M_.param_names_long(3) = {'delta'};
M_.param_names(4) = {'gamma'};
M_.param_names_tex(4) = {'gamma'};
M_.param_names_long(4) = {'gamma'};
M_.param_names(5) = {'theta'};
M_.param_names_tex(5) = {'theta'};
M_.param_names_long(5) = {'theta'};
M_.param_names(6) = {'etaC'};
M_.param_names_tex(6) = {'etaC'};
M_.param_names_long(6) = {'etaC'};
M_.param_names(7) = {'etaL'};
M_.param_names_tex(7) = {'etaL'};
M_.param_names_long(7) = {'etaL'};
M_.param_names(8) = {'tau'};
M_.param_names_tex(8) = {'tau'};
M_.param_names_long(8) = {'tau'};
M_.param_names(9) = {'deltaA'};
M_.param_names_tex(9) = {'deltaA'};
M_.param_names_long(9) = {'deltaA'};
M_.param_names(10) = {'barz'};
M_.param_names_tex(10) = {'barz'};
M_.param_names_long(10) = {'barz'};
M_.param_names(11) = {'rhoZ'};
M_.param_names_tex(11) = {'rhoZ'};
M_.param_names_long(11) = {'rhoZ'};
M_.param_partitions = struct();
M_.exo_det_nbr = 0;
M_.exo_nbr = 1;
M_.endo_nbr = 14;
M_.param_nbr = 11;
M_.orig_endo_nbr = 14;
M_.aux_vars = [];
M_.Sigma_e = zeros(1, 1);
M_.Correlation_matrix = eye(1, 1);
M_.H = 0;
M_.Correlation_matrix_ME = 1;
M_.sigma_e_is_diagonal = true;
M_.det_shocks = [];
M_.surprise_shocks = [];
M_.learnt_shocks = [];
M_.learnt_endval = [];
M_.heteroskedastic_shocks.Qvalue_orig = [];
M_.heteroskedastic_shocks.Qscale_orig = [];
M_.matched_irfs = {};
M_.matched_irfs_weights = {};
options_.linear = false;
options_.block = false;
options_.bytecode = false;
options_.use_dll = false;
options_.ramsey_policy = false;
options_.discretionary_policy = false;
M_.eq_nbr = 14;
M_.ramsey_orig_eq_nbr = 0;
M_.ramsey_orig_endo_nbr = 0;
M_.set_auxiliary_variables = exist(['./+' M_.fname '/set_auxiliary_variables.m'], 'file') == 2;
M_.epilogue_names = {};
M_.epilogue_var_list_ = {};
M_.orig_maximum_endo_lag = 1;
M_.orig_maximum_endo_lead = 1;
M_.orig_maximum_exo_lag = 0;
M_.orig_maximum_exo_lead = 0;
M_.orig_maximum_exo_det_lag = 0;
M_.orig_maximum_exo_det_lead = 0;
M_.orig_maximum_lag = 1;
M_.orig_maximum_lead = 1;
M_.orig_maximum_lag_with_diffs_expanded = 1;
M_.lead_lag_incidence = [
 0 4 0;
 0 5 18;
 0 6 0;
 1 7 0;
 0 8 0;
 2 9 0;
 0 10 0;
 0 11 0;
 0 12 0;
 0 13 0;
 0 14 0;
 0 15 0;
 0 16 0;
 3 17 0;]';
M_.nstatic = 10;
M_.nfwrd   = 1;
M_.npred   = 3;
M_.nboth   = 0;
M_.nsfwrd   = 1;
M_.nspred   = 3;
M_.ndynamic   = 4;
M_.dynamic_tmp_nbr = [12; 2; 0; 0; ];
M_.equations_tags = {
  1 , 'name' , 'Y' ;
  2 , 'name' , 'W' ;
  3 , 'name' , 'Pi' ;
  4 , 'name' , 'X' ;
  5 , 'name' , 'K' ;
  6 , 'name' , 'PA' ;
  7 , 'name' , 'A' ;
  8 , 'name' , '8' ;
  9 , 'name' , 'L' ;
  10 , 'name' , '10' ;
  11 , 'name' , 'UC' ;
  12 , 'name' , '12' ;
  13 , 'name' , '13' ;
  14 , 'name' , '14' ;
};
M_.mapping.Y.eqidx = [1 2 13 ];
M_.mapping.C.eqidx = [11 12 13 ];
M_.mapping.X.eqidx = [1 3 4 5 6 ];
M_.mapping.K.eqidx = [5 10 ];
M_.mapping.L.eqidx = [1 9 12 ];
M_.mapping.A.eqidx = [1 5 7 8 ];
M_.mapping.R.eqidx = [4 6 11 ];
M_.mapping.W.eqidx = [2 8 12 ];
M_.mapping.I.eqidx = [10 13 ];
M_.mapping.LY.eqidx = [2 3 4 9 ];
M_.mapping.LA.eqidx = [9 ];
M_.mapping.PA.eqidx = [6 8 ];
M_.mapping.Pi.eqidx = [3 ];
M_.mapping.z.eqidx = [1 5 7 8 14 ];
M_.mapping.e.eqidx = [14 ];
M_.static_and_dynamic_models_differ = false;
M_.has_external_function = false;
M_.block_structure.time_recursive = false;
M_.block_structure.block(1).Simulation_Type = 3;
M_.block_structure.block(1).endo_nbr = 1;
M_.block_structure.block(1).mfs = 1;
M_.block_structure.block(1).equation = [ 14];
M_.block_structure.block(1).variable = [ 14];
M_.block_structure.block(1).is_linear = false;
M_.block_structure.block(1).NNZDerivatives = 2;
M_.block_structure.block(1).bytecode_jacob_cols_to_sparse = [0 1 ];
M_.block_structure.block(2).Simulation_Type = 1;
M_.block_structure.block(2).endo_nbr = 1;
M_.block_structure.block(2).mfs = 1;
M_.block_structure.block(2).equation = [ 7];
M_.block_structure.block(2).variable = [ 6];
M_.block_structure.block(2).is_linear = true;
M_.block_structure.block(2).NNZDerivatives = 2;
M_.block_structure.block(2).bytecode_jacob_cols_to_sparse = [1 2 ];
M_.block_structure.block(3).Simulation_Type = 8;
M_.block_structure.block(3).endo_nbr = 10;
M_.block_structure.block(3).mfs = 8;
M_.block_structure.block(3).equation = [ 13 2 1 4 6 8 10 12 5 11];
M_.block_structure.block(3).variable = [ 1 8 3 10 7 12 9 5 4 2];
M_.block_structure.block(3).is_linear = false;
M_.block_structure.block(3).NNZDerivatives = 29;
M_.block_structure.block(3).bytecode_jacob_cols_to_sparse = [7 0 0 9 10 11 12 13 14 15 16 24 ];
M_.block_structure.block(4).Simulation_Type = 3;
M_.block_structure.block(4).endo_nbr = 1;
M_.block_structure.block(4).mfs = 1;
M_.block_structure.block(4).equation = [ 9];
M_.block_structure.block(4).variable = [ 11];
M_.block_structure.block(4).is_linear = true;
M_.block_structure.block(4).NNZDerivatives = 1;
M_.block_structure.block(4).bytecode_jacob_cols_to_sparse = [1 ];
M_.block_structure.block(5).Simulation_Type = 1;
M_.block_structure.block(5).endo_nbr = 1;
M_.block_structure.block(5).mfs = 1;
M_.block_structure.block(5).equation = [ 3];
M_.block_structure.block(5).variable = [ 13];
M_.block_structure.block(5).is_linear = true;
M_.block_structure.block(5).NNZDerivatives = 1;
M_.block_structure.block(5).bytecode_jacob_cols_to_sparse = [2 ];
M_.block_structure.block(1).g1_sparse_rowval = int32([1 ]);
M_.block_structure.block(1).g1_sparse_colval = int32([1 ]);
M_.block_structure.block(1).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure.block(2).g1_sparse_rowval = int32([]);
M_.block_structure.block(2).g1_sparse_colval = int32([]);
M_.block_structure.block(2).g1_sparse_colptr = int32([]);
M_.block_structure.block(3).g1_sparse_rowval = int32([5 1 2 3 7 2 4 6 2 3 8 3 4 1 4 5 6 1 6 5 7 1 4 6 8 8 ]);
M_.block_structure.block(3).g1_sparse_colval = int32([7 9 9 9 9 10 10 10 11 11 11 12 12 13 13 13 13 14 14 15 15 16 16 16 16 24 ]);
M_.block_structure.block(3).g1_sparse_colptr = int32([1 1 1 1 1 1 1 2 2 6 9 12 14 18 20 22 26 26 26 26 26 26 26 26 27 ]);
M_.block_structure.block(4).g1_sparse_rowval = int32([1 ]);
M_.block_structure.block(4).g1_sparse_colval = int32([1 ]);
M_.block_structure.block(4).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure.block(5).g1_sparse_rowval = int32([]);
M_.block_structure.block(5).g1_sparse_colval = int32([]);
M_.block_structure.block(5).g1_sparse_colptr = int32([]);
M_.block_structure.variable_reordered = [ 14 6 1 8 3 10 7 12 9 5 4 2 11 13];
M_.block_structure.equation_reordered = [ 14 7 13 2 1 4 6 8 10 12 5 11 9 3];
M_.block_structure.incidence(1).lead_lag = -1;
M_.block_structure.incidence(1).sparse_IM = [
 7 6;
 10 4;
 14 14;
];
M_.block_structure.incidence(2).lead_lag = 0;
M_.block_structure.incidence(2).sparse_IM = [
 1 1;
 1 3;
 1 5;
 1 6;
 1 14;
 2 1;
 2 8;
 2 10;
 3 3;
 3 10;
 3 13;
 4 3;
 4 7;
 4 10;
 5 3;
 5 4;
 5 6;
 5 14;
 6 3;
 6 7;
 6 12;
 7 6;
 7 14;
 8 6;
 8 8;
 8 12;
 8 14;
 9 5;
 9 10;
 9 11;
 10 4;
 10 9;
 11 2;
 11 7;
 12 2;
 12 5;
 12 8;
 13 1;
 13 2;
 13 9;
 14 14;
];
M_.block_structure.incidence(3).lead_lag = 1;
M_.block_structure.incidence(3).sparse_IM = [
 11 2;
];
M_.block_structure.dyn_tmp_nbr = 11;
M_.state_var = [14 6 4 ];
M_.maximum_lag = 1;
M_.maximum_lead = 1;
M_.maximum_endo_lag = 1;
M_.maximum_endo_lead = 1;
oo_.steady_state = zeros(14, 1);
M_.maximum_exo_lag = 0;
M_.maximum_exo_lead = 0;
oo_.exo_steady_state = zeros(1, 1);
M_.params = NaN(11, 1);
M_.endo_trends = struct('deflator', cell(14, 1), 'log_deflator', cell(14, 1), 'growth_factor', cell(14, 1), 'log_growth_factor', cell(14, 1));
M_.NNZDerivatives = [46; -1; -1; ];
M_.dynamic_g1_sparse_rowval = int32([10 7 14 1 2 13 11 12 13 1 3 4 5 6 5 10 1 9 12 1 5 7 8 4 6 11 2 8 12 10 13 2 3 4 9 9 6 8 3 1 5 7 8 14 11 14 ]);
M_.dynamic_g1_sparse_colval = int32([4 6 14 15 15 15 16 16 16 17 17 17 17 17 18 18 19 19 19 20 20 20 20 21 21 21 22 22 22 23 23 24 24 24 24 25 26 26 27 28 28 28 28 28 30 43 ]);
M_.dynamic_g1_sparse_colptr = int32([1 1 1 1 2 2 3 3 3 3 3 3 3 3 4 7 10 15 17 20 24 27 30 32 36 37 39 40 45 45 46 46 46 46 46 46 46 46 46 46 46 46 46 47 ]);
M_.lhs = {
'Y'; 
'W'; 
'Pi'; 
'X'; 
'K'; 
'PA'; 
'A'; 
'W'; 
'L'; 
'K'; 
'gamma*C^(-etaC)'; 
'W'; 
'Y'; 
'log(z)'; 
};
M_.static_tmp_nbr = [11; 2; 0; 0; ];
M_.block_structure_stat.block(1).Simulation_Type = 3;
M_.block_structure_stat.block(1).endo_nbr = 1;
M_.block_structure_stat.block(1).mfs = 1;
M_.block_structure_stat.block(1).equation = [ 14];
M_.block_structure_stat.block(1).variable = [ 14];
M_.block_structure_stat.block(2).Simulation_Type = 3;
M_.block_structure_stat.block(2).endo_nbr = 1;
M_.block_structure_stat.block(2).mfs = 1;
M_.block_structure_stat.block(2).equation = [ 7];
M_.block_structure_stat.block(2).variable = [ 6];
M_.block_structure_stat.block(3).Simulation_Type = 6;
M_.block_structure_stat.block(3).endo_nbr = 10;
M_.block_structure_stat.block(3).mfs = 10;
M_.block_structure_stat.block(3).equation = [ 1 4 5 6 2 8 13 10 11 12];
M_.block_structure_stat.block(3).variable = [ 3 10 4 7 8 12 1 9 2 5];
M_.block_structure_stat.block(4).Simulation_Type = 3;
M_.block_structure_stat.block(4).endo_nbr = 1;
M_.block_structure_stat.block(4).mfs = 1;
M_.block_structure_stat.block(4).equation = [ 9];
M_.block_structure_stat.block(4).variable = [ 11];
M_.block_structure_stat.block(5).Simulation_Type = 1;
M_.block_structure_stat.block(5).endo_nbr = 1;
M_.block_structure_stat.block(5).mfs = 1;
M_.block_structure_stat.block(5).equation = [ 3];
M_.block_structure_stat.block(5).variable = [ 13];
M_.block_structure_stat.variable_reordered = [ 14 6 3 10 4 7 8 12 1 9 2 5 11 13];
M_.block_structure_stat.equation_reordered = [ 14 7 1 4 5 6 2 8 13 10 11 12 9 3];
M_.block_structure_stat.incidence.sparse_IM = [
 1 1;
 1 3;
 1 5;
 1 6;
 1 14;
 2 1;
 2 8;
 2 10;
 3 3;
 3 10;
 3 13;
 4 3;
 4 7;
 4 10;
 5 3;
 5 4;
 5 6;
 5 14;
 6 3;
 6 7;
 6 12;
 7 6;
 7 14;
 8 6;
 8 8;
 8 12;
 8 14;
 9 5;
 9 10;
 9 11;
 10 4;
 10 9;
 11 2;
 11 7;
 12 2;
 12 5;
 12 8;
 13 1;
 13 2;
 13 9;
 14 14;
];
M_.block_structure_stat.tmp_nbr = 11;
M_.block_structure_stat.block(1).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(1).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(1).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(2).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(2).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(2).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(3).g1_sparse_rowval = int32([1 2 3 4 2 5 3 8 2 4 9 5 6 10 4 6 1 5 7 7 8 7 9 10 1 10 ]);
M_.block_structure_stat.block(3).g1_sparse_colval = int32([1 1 1 1 2 2 3 3 4 4 4 5 5 5 6 6 7 7 7 8 8 9 9 9 10 10 ]);
M_.block_structure_stat.block(3).g1_sparse_colptr = int32([1 5 7 9 12 15 17 20 22 25 27 ]);
M_.block_structure_stat.block(4).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(4).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(4).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(5).g1_sparse_rowval = int32([]);
M_.block_structure_stat.block(5).g1_sparse_colval = int32([]);
M_.block_structure_stat.block(5).g1_sparse_colptr = int32([]);
M_.static_g1_sparse_rowval = int32([1 2 13 11 12 13 1 3 4 5 6 5 10 1 9 12 1 5 7 8 4 6 11 2 8 12 10 13 2 3 4 9 9 6 8 3 1 5 7 8 14 ]);
M_.static_g1_sparse_colval = int32([1 1 1 2 2 2 3 3 3 3 3 4 4 5 5 5 6 6 6 6 7 7 7 8 8 8 9 9 10 10 10 10 11 12 12 13 14 14 14 14 14 ]);
M_.static_g1_sparse_colptr = int32([1 4 7 12 14 17 21 24 27 29 33 34 36 37 42 ]);
M_.params(1) = 0.35;
alpha = M_.params(1);
M_.params(2) = 0.99;
beta = M_.params(2);
M_.params(3) = 0.025;
delta = M_.params(3);
M_.params(4) = 1;
gamma = M_.params(4);
M_.params(5) = 1.6;
theta = M_.params(5);
M_.params(6) = 2;
etaC = M_.params(6);
M_.params(7) = 1.5;
etaL = M_.params(7);
M_.params(8) = 1;
tau = M_.params(8);
M_.params(9) = 0.025;
deltaA = M_.params(9);
M_.params(10) = 0.8;
barz = M_.params(10);
M_.params(11) = 0.9;
rhoZ = M_.params(11);
steady;
oo_.dr.eigval = check(M_,options_,oo_);
%
% SHOCKS instructions
%
M_.exo_det_length = 0;
M_.Sigma_e(1, 1) = (0.01)^2;
options_.irf = 100;
options_.order = 1;
var_list_ = {};
[info, oo_, options_, M_] = stoch_simul(M_, options_, oo_, var_list_);


oo_.time = toc(tic0);
disp(['Total computing time : ' dynsec2hms(oo_.time) ]);
if ~exist([M_.dname filesep 'Output'],'dir')
    mkdir(M_.dname,'Output');
end
save([M_.dname filesep 'Output' filesep 'Tebaldi_results.mat'], 'oo_', 'M_', 'options_');
if exist('estim_params_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'Tebaldi_results.mat'], 'estim_params_', '-append');
end
if exist('bayestopt_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'Tebaldi_results.mat'], 'bayestopt_', '-append');
end
if exist('dataset_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'Tebaldi_results.mat'], 'dataset_', '-append');
end
if exist('estimation_info', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'Tebaldi_results.mat'], 'estimation_info', '-append');
end
if exist('dataset_info', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'Tebaldi_results.mat'], 'dataset_info', '-append');
end
if exist('oo_recursive_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'Tebaldi_results.mat'], 'oo_recursive_', '-append');
end
if exist('options_mom_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'Tebaldi_results.mat'], 'options_mom_', '-append');
end
if ~isempty(lastwarn)
  disp('Note: warning(s) encountered in MATLAB/Octave code')
end
